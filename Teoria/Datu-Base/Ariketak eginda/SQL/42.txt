-- Zenbat bezero ditu herrialde bakoitzak?
SELECT COUNT(BEZEROKODEA) AS BEZEROAK, HERRIALDEA
FROM BEZEROAK
GROUP BY HERRIALDEA;

-- Zein izan zen 2009ko batazbesteko ordainketa? Erakutsi emaitza bi dezimalekin.
SELECT TRUNC(AVG(KOPURUA),2) AS BOROBILDUGABE, ROUND(AVG(KOPURUA),2) AS BOROBILDUTA
FROM ORDAINKETAK
WHERE TO_CHAR(ORDAINKETADATA,'YYYY') = '2009';

SELECT TRUNC(AVG(KOPURUA),2) AS BOROBILDUGABE, ROUND(AVG(KOPURUA),2) AS BOROBILDUTA
FROM ORDAINKETAK
WHERE EXTRACT(YEAR FROM ORDAINKETADATA) = 2009;

SELECT TRUNC(AVG(KOPURUA),2) AS BOROBILDUGABE, ROUND(AVG(KOPURUA),2) AS BOROBILDUTA
FROM ORDAINKETAK
WHERE ORDAINKETADATA >= TO_DATE('01/01/2009','DD/MM/YYYY') AND ORDAINKETADATA <= TO_DATE('31/12/2009','DD/MM/YYYY');

-- Zenbat eskaera daude egoera bakoitzean? Ordenatu emaitza beheranzko noranzkoan, eskaera kopuruaren arabera.
SELECT EGOERA, COUNT(ESKAERAKODEA) AS KOPURUA
FROM ESKAERAK
GROUP BY EGOERA
ORDER BY KOPURUA DESC;

-- Kontsulta bakarra eginez kalkulatu ezazu produktu garestienaren eta merkeenaren salmenta prezioa.
SELECT MAX(SALMENTAPREZIOA), MIN(SALMENTAPREZIOA)
FROM PRODUKTUAK;

-- "Alberto Soria" langilearen menpe dauden langileen izen, abizen eta emailak atera.
SELECT IZENA, ABIZENA1, ABIZENA2, EMAILA
FROM LANGILEAK 
WHERE NAGUSIKODEA = (SELECT LANGILEKODEA FROM LANGILEAK WHERE IZENA='Alberto' AND ABIZENA1='Soria');

SELECT L.IZENA, L.ABIZENA1, L.ABIZENA2, L.EMAILA
FROM LANGILEAK L, LANGILEAK N
WHERE L.NAGUSIKODEA = N.LANGILEKODEA
AND N.IZENA='Alberto' 
AND N.ABIZENA1='Soria';

SELECT L.IZENA, L.ABIZENA1, L.ABIZENA2, L.EMAILA
FROM LANGILEAK L INNER JOIN LANGILEAK N
ON L.NAGUSIKODEA = N.LANGILEKODEA
WHERE N.IZENA='Alberto' 
AND N.ABIZENA1='Soria';

-- "Representante Ventas" lanpostua ez duten langileen izen, abizen eta lanpostua.
SELECT IZENA, ABIZENA1, LANPOSTUA
FROM LANGILEAK
WHERE LANPOSTUA <> 'Representante Ventas';

-- "M" hizkitik hasten diren herrien bezero kopurua.
SELECT COUNT(BEZEROKODEA)
FROM BEZEROAK
WHERE HERRIA LIKE 'M%';

-- "M" hizkitik hasten diren herri bakoitzean dagoen bezero kopurua.
SELECT HERRIA, COUNT(BEZEROKODEA)
FROM BEZEROAK
WHERE HERRIA LIKE 'M%'
GROUP BY HERRIA;

-- Saloresketa langile bakoitzaren kodea eta atendituriko bezero kopurua.
SELECT L.LANGILEKODEA, COUNT(B.BEZEROKODEA)
FROM LANGILEAK L INNER JOIN BEZEROAK B
ON B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
GROUP BY L.LANGILEKODEA;

SELECT SALEROSKETALANGILEKODEA, COUNT(BEZEROKODEA)
FROM BEZEROAK 
GROUP BY SALEROSKETALANGILEKODEA;

-- Bezero bakoitzak egindako lehen eta azken ordainketaren datak.
SELECT BEZEROKODEA, MIN(ORDAINKETADATA), MAX(ORDAINKETADATA)
FROM ORDAINKETAK
GROUP BY(BEZEROKODEA);

SELECT O.BEZEROKODEA, B.BEZEROIZENA, MIN(O.ORDAINKETADATA), MAX(O.ORDAINKETADATA)
FROM ORDAINKETAK O, BEZEROAK B
WHERE O.BEZEROKODEA = B.BEZEROKODEA
GROUP BY(O.BEZEROKODEA, B.BEZEROIZENA);

-- 2008. urtean ordainketak egin zituzten bezeroen kodea.
SELECT DISTINCT BEZEROKODEA
FROM ORDAINKETAK
WHERE TO_CHAR(ORDAINKETADATA,'YYYY') = '2008';

SELECT BEZEROKODEA
FROM ORDAINKETAK
WHERE TO_CHAR(ORDAINKETADATA,'YYYY') = '2008'
GROUP BY BEZEROKODEA;
-- Gehien saldu diren lehenengo 20 produktuen zerrenda, eta produktu bakoitzeko saldutako kopurua (honen arabera beheranzko noranzkoan ordenatua).
SELECT PRODUKTUKODEA, SUM(KOPURUA)
FROM ESKAERAZEHAZTAZUNAK
GROUP BY PRODUKTUKODEA
ORDER BY SUM(KOPURUA) DESC
FETCH FIRST 20 ROWS ONLY;

SELECT * FROM (SELECT PRODUKTUKODEA, SUM(KOPURUA)
                FROM ESKAERAZEHAZTAZUNAK
                GROUP BY PRODUKTUKODEA
                ORDER BY SUM(KOPURUA) DESC)
WHERE ROWNUM<=20;

-- Entregaturiko data gutxienez esperotako data baino bi egun arinago izan den eskaeren kodea, bezeroaren kodea, esperotako data eta entrega data.
SELECT ESKAERAKODEA, BEZEROKODEA, ESPEROTAKODATA, ENTREGADATA, ESPEROTAKODATA-ENTREGADATA AS EGUNAK
FROM ESKAERAK
WHERE ESPEROTAKODATA-ENTREGADATA >=2;
-- Enpresak bere historian zehar lorturiko fakturazio totala, zerga-oinarria, BEZa eta fakturatutako totala adieraziz. Zerga-oinarria kalkulatzeko eskaeren xehetasun taularen produktuaren prezioa eta saldutako unitateak biderkatuz lortzen da, BEZa zerga-oinarriaren %21a da eta totala azken bi hauen batura
SELECT SUM(KOPURUA*PREZIOA) AS ZERGAOINARRIA, 21*SUM(KOPURUA*PREZIOA)/100 AS BEZA, SUM(KOPURUA*PREZIOA)+ 21*SUM(KOPURUA*PREZIOA)/100 AS TOTALA
FROM ESKAERAZEHAZTAZUNAK;

SELECT SUM(KOPURUA*PREZIOA) AS ZERGAOINARRIA, 0.21*SUM(KOPURUA*PREZIOA) AS BEZA, 1.21*SUM(KOPURUA*PREZIOA) AS TOTALA
FROM ESKAERAZEHAZTAZUNAK;
--18. Ordainketarik egin ez duten bezeroen izena, beraien salerosketa ordezkariaren izenarekin batera.
SELECT B.BEZEROKODEA, B.BEZEROIZENA, L.IZENA
FROM BEZEROAK B INNER JOIN LANGILEAK L
ON B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
WHERE B.BEZEROKODEA NOT IN (SELECT BEZEROKODEA FROM ORDAINKETAK);

SELECT B.BEZEROKODEA, B.BEZEROIZENA, L.IZENA
FROM BEZEROAK B, LANGILEAK L
WHERE B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
AND B.BEZEROKODEA NOT IN (SELECT BEZEROKODEA FROM ORDAINKETAK);

SELECT B.BEZEROKODEA, B.BEZEROIZENA, L.IZENA
FROM BEZEROAK B INNER JOIN LANGILEAK L
ON B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
LEFT JOIN ORDAINKETAK O
ON B.BEZEROKODEA = O.BEZEROKODEA
WHERE O.BEZEROKODEA IS NULL;

-- Stock kopuru handiena eta txikiena dituzten produktuak
SELECT IZENA, STOCKKOPURUA
FROM PRODUKTUAK
WHERE STOCKKOPURUA = (SELECT MAX(STOCKKOPURUA) FROM PRODUKTUAK)
OR STOCKKOPURUA = (SELECT MIN(STOCKKOPURUA) FROM PRODUKTUAK)

(SELECT IZENA, STOCKKOPURUA
FROM PRODUKTUAK
WHERE STOCKKOPURUA = (SELECT MAX(STOCKKOPURUA) FROM PRODUKTUAK))
UNION
(SELECT IZENA, STOCKKOPURUA
FROM PRODUKTUAK
WHERE STOCKKOPURUA = (SELECT MIN(STOCKKOPURUA) FROM PRODUKTUAK))

-- Bezeroen izena eta bakoitzak ordaindutako totala duen zerrenda. Kontutan eduki ordainketarik egin ez duen bezeroak egon daitezkeela, kasu honetan "Ez du ordainketarik egin" adierazi.
SELECT B.BEZEROIZENA, NVL(TO_CHAR(SUM(O.KOPURUA)),'Ez du ordainketarik egin')
FROM BEZEROAK B LEFT JOIN ORDAINKETAK O
ON B.BEZEROKODEA = O.BEZEROKODEA
GROUP BY B.BEZEROIZENA;

-- 2008.urtean eskaerak egin dituzten bezeroen izena, alfabetikoki ordenatuta.
SELECT B.BEZEROIZENA
FROM ESKAERAK E, BEZEROAK B
WHERE E.BEZEROKODEA = B.BEZEROKODEA
AND TO_CHAR(ESKAERADATA,'YYYY')='2008'
GROUP BY B.BEZEROIZENA
ORDER BY B.BEZEROIZENA ASC;

SELECT DISTINCT B.BEZEROIZENA
FROM ESKAERAK E, BEZEROAK B
WHERE E.BEZEROKODEA = B.BEZEROKODEA
AND TO_CHAR(ESKAERADATA,'YYYY')='2008'
ORDER BY B.BEZEROIZENA ASC;

SELECT DISTINCT B.BEZEROIZENA
FROM ESKAERAK E INNER JOIN BEZEROAK B
ON E.BEZEROKODEA = B.BEZEROKODEA
WHERE TO_CHAR(ESKAERADATA,'YYYY')='2008'
ORDER BY B.BEZEROIZENA ASC;


-- Ordainketarik egin ez duten bezeroen izena, beraien salerosketa ordezkarien izena, lehenengo abizena eta bulegoaren telefono zenbakia.
SELECT B.BEZEROIZENA, L.IZENA, L.ABIZENA1, BU.TELEFONOA
FROM BEZEROAK B, LANGILEAK L, BULEGOAK BU
WHERE B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
AND L.BULEGOKODEA = BU.BULEGOKODEA
AND B.BEZEROKODEA NOT IN (SELECT BEZEROKODEA FROM ORDAINKETAK);

SELECT B.BEZEROIZENA, L.IZENA, L.ABIZENA1, BU.TELEFONOA
FROM BEZEROAK B INNER JOIN LANGILEAK L
ON B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
INNER JOIN BULEGOAK BU
ON L.BULEGOKODEA = BU.BULEGOKODEA
LEFT JOIN ORDAINKETAK O
ON O.BEZEROKODEA = B.BEZEROKODEA
WHERE O.BEZEROKODEA IS NULL;

-- 2007.urtean ordainketaren bat egin duten bezeroen izena
SELECT BEZEROIZENA
FROM BEZEROAK
WHERE BEZEROKODEA IN(
    SELECT BEZEROKODEA 
    FROM ORDAINKETAK WHERE TO_CHAR(ORDAINKETADATA, 'YYYY') = '2007');

-- Garaiz entregatu ez diren eskaeren kodea, bezeroaren izena, 
-- entregaturiko data eta esperotako data
SELECT E.ESKAERAKODEA, B.BEZEROIZENA, E.ENTREGADATA, E.ESPEROTAKODATA
FROM ESKAERAK E, BEZEROAK B
WHERE E.BEZEROKODEA = B.BEZEROKODEA
AND E.ESPEROTAKODATA < E.ENTREGADATA;

SELECT E.ESKAERAKODEA, B.BEZEROIZENA, E.ENTREGADATA, E.ESPEROTAKODATA
FROM ESKAERAK E INNER JOIN BEZEROAK B
ON E.BEZEROKODEA = B.BEZEROKODEA
WHERE E.ESPEROTAKODATA < E.ENTREGADATA;

-- Inoiz eskatu ez diren produktuen kodea, izena eta gama
SELECT P.PRODUKTUKODEA, P.IZENA, P.GAMA
FROM PRODUKTUAK P
WHERE P.PRODUKTUKODEA NOT IN(
    SELECT PRODUKTUKODEA FROM ESKAERAZEHAZTAZUNAK);

SELECT P.PRODUKTUKODEA, P.IZENA, P.GAMA
FROM PRODUKTUAK P LEFT JOIN ESKAERAZEHAZTAZUNAK E
ON P.PRODUKTUKODEA = E.PRODUKTUKODEA
WHERE E.PRODUKTUKODEA IS NULL;
-- Bartzelonan lan egiten duten langileen izen-abizenak.
SELECT L.IZENA, L.ABIZENA1, L.ABIZENA2
FROM LANGILEAK L
WHERE BULEGOKODEA = (
    SELECT BULEGOKODEA FROM BULEGOAK WHERE HERRIA = 'Barcelona');
    
SELECT L.IZENA || ' ' || L.ABIZENA1 || ' ' || L.ABIZENA2 AS IZENABIZENAK
FROM LANGILEAK L INNER JOIN BULEGOAK B
ON L.BULEGOKODEA = B.BULEGOKODEA
WHERE B.HERRIA = 'Barcelona';

SELECT CONCAT(CONCAT(CONCAT(CONCAT(L.IZENA,' '), L.ABIZENA1), ' '),L.ABIZENA2) AS IZENABIZENAK
FROM LANGILEAK L INNER JOIN BULEGOAK B
ON L.BULEGOKODEA = B.BULEGOKODEA
WHERE B.HERRIA = 'Barcelona';
-- Eskaera bakoitzaren kodea eta prezio totala
SELECT ESKAERAKODEA, SUM(KOPURUA*PREZIOA) AS PREZIOTOTALA
FROM ESKAERAZEHAZTAZUNAK
GROUP BY ESKAERAKODEA;

-- Asteko egun bakoitzean (astelehena, asteartea,...) 
--entregaturiko eskaera kopurua, txikienetik handienera ordenatuta. 
--Entregatuak izan ez diren eskaerak ez dira kontutan eduki behar.
SELECT TO_CHAR(ENTREGADATA, 'DAY', 'NLS_DATE_LANGUAGE = BASQUE') AS ASTEKOEGUNA, COUNT(ESKAERAKODEA) AS KOPURUA
FROM ESKAERAK
WHERE ENTREGADATA IS NOT NULL
GROUP BY TO_CHAR(ENTREGADATA, 'DAY', 'NLS_DATE_LANGUAGE = BASQUE')
ORDER BY KOPURUA ASC;
-- Azalpenen bat duten eskaeren data ("2000ko Urtarrilak 1" formatuan), 
-- bezeroaren izena eta azalpena
SELECT B.BEZEROIZENA, TO_CHAR(E.ESKAERADATA, 'YYYY"ko" FMMonth DD', 'NLS_DATE_LANGUAGE = BASQUE') AS DATA, E.AZALPENA
FROM BEZEROAK B, ESKAERAK E
WHERE B.BEZEROKODEA = E.BEZEROKODEA
AND E.AZALPENA IS NOT NULL;

SELECT B.BEZEROIZENA, TO_CHAR(E.ESKAERADATA, 'YYYY"ko" FMMonth DD', 'NLS_DATE_LANGUAGE = BASQUE') AS DATA, E.AZALPENA
FROM BEZEROAK B INNER JOIN ESKAERAK E
ON B.BEZEROKODEA = E.BEZEROKODEA
WHERE E.AZALPENA IS NOT NULL;

SELECT B.BEZEROIZENA, TO_CHAR(E.ESKAERADATA, 'YYYY"ko" FMMonth DD', 'NLS_DATE_LANGUAGE = BASQUE') AS DATA, E.AZALPENA
FROM BEZEROAK B INNER JOIN ESKAERAK E
USING(BEZEROKODEA)
WHERE E.AZALPENA IS NOT NULL;
-- "M" hizkitik hasten diren herrietan bizi diren eta eskaeraren 
-- bat egin duten bezeroen izena eta herria
SELECT BEZEROIZENA, HERRIA
FROM BEZEROAK
WHERE BEZEROKODEA IN(SELECT BEZEROKODEA FROM ESKAERAK)
AND HERRIA LIKE 'M%';

SELECT BEZEROIZENA, HERRIA
FROM BEZEROAK B INNER JOIN ESKAERAK E
USING (BEZEROKODEA)
WHERE HERRIA LIKE 'M%'
GROUP BY BEZEROIZENA, HERRIA;

-- 3000  baino gehiago fakturatu duten produktuen salmenta 
-- kopuru totala. Produktuaren izena, saldutako unitate kopurua, 
-- fakturatutako totala eta fakturatutako totala zergak barne (BEZ %21a)
SELECT P.IZENA, SUM(E.KOPURUA*E.PREZIOA) AS FAKTURATOTALA, 
SUM(E.KOPURUA) AS KOPURUA, (1.21*SUM(E.KOPURUA*E.PREZIOA)) AS TOTALABEZAREKIN
FROM PRODUKTUAK P, ESKAERAZEHAZTAZUNAK E
WHERE P.PRODUKTUKODEA = E.PRODUKTUKODEA
GROUP BY P.IZENA, P.PRODUKTUKODEA
HAVING SUM(E.KOPURUA*E.PREZIOA) > 3000;

-- 6 produktu baino gehiago dituzten eskaeren kodea.
SELECT ESKAERAKODEA, COUNT(ESKAERAKODEA) AS KOPURUA
FROM ESKAERAZEHAZTAZUNAK
GROUP BY ESKAERAKODEA
HAVING COUNT(ESKAERAKODEA) > 6;

-- Ordainketarik egin ez duten bezeroen izena, eta beraien salerosketa 
-- ordezkariaren izena eta bere bulegoaren herria.
SELECT B.BEZEROIZENA, L.IZENA, BU.HERRIA
FROM BEZEROAK B, LANGILEAK L, BULEGOAK BU
WHERE B.SALEROSKETALANGILEKODEA = L.LANGILEKODEA
AND L.BULEGOKODEA = BU.BULEGOKODEA
AND B.BEZEROKODEA NOT IN(SELECT BEZEROKODEA FROM ORDAINKETAK);

-- Langileen izena eta langile bakoitzaren nagusiaren izena 
-- duen zerrenda
SELECT L.IZENA AS LANGILEIZENA, NVL(N.IZENA, 'Ez dauka nagusirik') AS NAGUSIZENA
FROM LANGILEAK L LEFT JOIN LANGILEAK N
ON L.NAGUSIKODEA = N.LANGILEKODEA;