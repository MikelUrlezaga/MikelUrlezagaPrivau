CREATE OR REPLACE TRIGGER MARGENA_MANTENDU
    AFTER UPDATE ON PRODUKTU
    FOR EACH ROW
DECLARE
   MARGENA NUMBER;
   ID PRODUKTU.ID%TYPE;
BEGIN
    IF :OLD.BALIOA != :NEW.BALIOA THEN
        MARGENA := :NEW.BALIOA - :OLD.BALIOA;
        INSERT INTO MARGEN_ALDATU_TAULA (ID, MARGEN) VALUES (:NEW.ID, MARGENA);
    ELSE 
        MARGENA := 0;
    END IF;
END;
/
BEGIN
    UPDATE PRODUKTU SET BALIOA = BALIOA + 10 WHERE ID = 58;
END;
/
CREATE TABLE MARGEN_ALDATU_TAULA (
    ID NUMBER (4,0),
    MARGEN NUMBER,
    CONSTRAINT PK_MARGEN_ALDATU_TAULA PRIMARY KEY (ID),
    CONSTRAINT FK_MARGEN_ALDATU_TAULA FOREIGN KEY (ID) REFERENCES PRODUKTU(ID)
);
/
CREATE OR REPLACE PROCEDURE MARGENA_SARTU AS
        CURSOR CMARGEN IS SELECT * FROM MARGEN_ALDATU_TAULA;
    IDA MARGEN_ALDATU_TAULA.ID%TYPE;
BEGIN
    FOR MARGENA IN CMARGEN
    LOOP
        UPDATE PRODUKTU SET PRODUKTU.SALNEURRIA = PRODUKTU.SALNEURRIA + MARGENA.MARGEN WHERE ID=MARGENA.ID;
        IDA := MARGENA.ID;
        DELETE FROM MARGEN_ALDATU_TAULA WHERE ID = IDA;
    END LOOP;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Ez dago daturik eguneratzeko');
END;
/
EXECUTE MARGENA_SARTU;
/
